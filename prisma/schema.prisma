// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ARTIST
  CUSTOMER
}

model Session {
  id String @id @default(cuid())
  userId String
  expiresAt DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

//user here
model User {
  id       String   @id @default(cuid())
  email    String   @unique
  username String   @unique
  name     String
  password String
  number String?
  bio String?
  image String?
  facebookLink String?
  instagramLink String?
  gmailLink String?

  type     UserType
  artworks Artwork[]
  services Services[]

  session Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artwork {
  id          String   @id @default(cuid())
  title       String
  description String
  imageUrl    String
  startingPrice Float

  user        User     @relation(fields: [userId], references: [id])
  userId      String
  service Services @relation(fields: [serviceId], references: [id])
  serviceId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Services {
  id String @id @default(cuid())

  name String
  description String
  startingPrice Float
  thumbnail String
  
  artworks Artwork[]
  
  userId String
  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}




